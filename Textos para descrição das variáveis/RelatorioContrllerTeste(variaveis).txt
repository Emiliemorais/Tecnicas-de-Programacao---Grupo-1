
 class RelatorioControllerTeste 



	/* 
	 * Método utilizado para receber os atributos de um Relatorio de forma correta,
	 * para realização do teste, lançando exceçoes de atributos nulos e problemas de conversão
	*/
	@Before
	 void setUp   RelatorioException, ParseException 
	
		 
		
			relatorio.setBarbeiro"Luciano"
			relatorio.setDataFinal"09/09/2013"
			relatorio.setDataInicial"01/01/2013"
			relatorio.setTipoServico"corte"
		
		 NullPointerException e 
		
			e.printStackTrace
		

	
	
	/* 
	 * Método utilizado para testar o getInstance da classe RelatorioDAO
	*/

	@Test
	 void getInstanceDeRelatorioDAODeveRetonarInstanciaCorrente 
	
		RelatorioController relatorioController  RelatorioController.getInstance
		assertEqualsRelatorioController.getInstance, relatorioController
	
	
	/* 
	 * Método utilizado para testar a pesquisa de um relatorio através de um serviço
	 * vendo se existe a amostra do relatorio
	*/
	@Test
	 void procurarPorServicoDeRelatorioControllerDeveMostrarUmRelatorio   SQLException
	
		RelatorioController relatorioController   RelatorioController
		ResultSet rs  relatorioController.pesquisarPorServicorelatorio
		
		whilers.next
	
	
	/* 
	 * Método utilizado para testar a pesquisa de um relatorio através de uma data
	 * vendo se existe a amostra do relatorio
	*/
	@Test
	 void procurarPorDataDeRelatorioControllerDeveMostrarUmRelatorio   SQLException
	
		RelatorioController relatorioController   RelatorioController
		ResultSet rs  relatorioController.pesquisarPorDatarelatorio
		
		whilers.next
	
	
	/* 
	 * Método utilizado para testar a pesquisa de um relatorio através de um barbeiro
	 * e de um serviço vendo se existe a amostra do relatorio
	*/
	@Test
	 void procurarPorBarbeiroEServicoDeRelatorioControllerDeveMostrarUmRelatorio   SQLException 
	
		RelatorioController relatorioController   RelatorioController
		ResultSet rs  relatorioController.pesquisarPorBarbeiroEServicorelatorio
		
		whilers.next
	
	
	/* 
	 * Método utilizado para testar a pesquisa de um relatorio através de um barbeiro
	 * e de uma data e um serviço vendo se existe a amostra do relatorio
	*/
	@Test
	 void procurarPorDataBarbeiroEServicoDeRelatorioControllerDeveMostrarUmRelatorio   SQLException
	
		RelatorioController relatorioController   RelatorioController
		ResultSet rs  relatorioController.pesquisarPorDataBarbeiroEServicorelatorio
		
		whilers.next
	
	
	/* 
	 * Método utilizado para testar a pesquisa de um relatorio através de um barbeiro
	 * e de uma data vendo se existe a amostra do relatorio
	*/
	@Test
	 void procurarPorDataEBarbeiroDeRelatorioControllerDeveMostrarUmRelatorio   SQLException 
	
		RelatorioController relatorioController   RelatorioController
		ResultSet rs  relatorioController.pesquisarPorDataEBarbeirorelatorio
		
		whilers.next
	
	
	/* 
	 * Método utilizado para testar a pesquisa de um relatorio através de uma data
	 * e de um serviço vendo se existe a amostra do relatorio
	*/
	@Test
	 void procurarPorDataEServicoDeRelatorioControllerDeveMostrarUmRelatorio   SQLException
	
		RelatorioController relatorioController   RelatorioController
		ResultSet rs  relatorioController.pesquisarPorDataEServicorelatorio
		
		whilers.next
	
	
	/* 
	 * Método utilizado para testar a pesquisa de um relatorio através de um barbeiro
	 * vendo se existe a amostra do relatorio
	*/
	@Test
	 void procurarPorBarbeiroDeRelatorioControllerDeveMostrarUmRelatorio   SQLException
	
		RelatorioController relatorioController   RelatorioController
		ResultSet rs  relatorioController.pesquisarPorBarbeirorelatorio
		
		whilers.next
	


